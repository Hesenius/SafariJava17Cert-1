Which are legal:

A) class X {
     var x = 99;
   }
B) void doStuff(var x) { }
C) void doStuff() {
     var x;
     x = 100;
   }
D) void doStuff() {
     var x = 100;
   }
E) void doStuff() {
     var x = { 1, 2, 3 };
   }

Q) Which are legal

A) for (var x = 0; x < 3; x++)
   System.out.println(x);

B)
 try (var in = new FileReader("");
      var out = new FileWriter("")) {
 }

C) var var = "var";

Q) Given:
var x = true ? "99" : 99;

What is the type of x?
A) none, it's fails to compile
B) int
C) String
D) Object
E) none of the above

Q) Given:
String s1 = new String("Hello");
s1.concat(" world");
System.out.println(s1);

What is the output?
A) Hello World
B) Hello
C) World
D) Doesn't compile
E) Exception at runtime


Q) Given:

String message = """Hello\
Java 17 World!""";
System.out.println(message + "XXX");

What is the result?
A) Compilation fails
B) Exception at runtime
C) Hello
   Java 17 World!XXX
D) Hello Java 17 World!XXX
E) Hello Java 17 World!
   XXX

Q) Given:

       String message = """
           Hello
               Java 17 World!""";
       System.out.println(message + "XXX");

   What is the result?
   A) Hello
      Java 17 World!XXX
   B) Hello
          Java 17 World!XXX
   C) Hello
      Java 17 World!
      XXX
   D)     Hello
              Java 17 World!
      XXX

Q) Given:
int i = 3, j = 12, k = 2;
System.out.println(i + j / k - i);

hat is the result?
A) -15
B) 4
C) 6
D) -9

Q)  Given:
       doStuff(3)[5] = 99;

which declaration of doStuff would permit the code to compile?

A)  public static void doStuff(int x, int [] values) {}
B)  public static int doStuff(int x, int [] values) {return values[x];}
C)  public static int[] doStuff(int x) {return new int[]{};}
D)  public static int[] doStuff(int x, int[] values) {return values;}
E)  public static List<Integer> doStuff(int x) {return new ArrayList<>();}

Q) Given:
    int x = 10;
    System.out.println("value is " + (x++ = 99));

What is the result?
A) 10
B) 11
C) 99
D) 109
E) 110
F) Compilation fails

Q) Given:
    int j = 0;
    for (int i = 0; i < 3; i++) {
      if (i > ++j && i % 2 == 0) ++i = ++j;
      if (j > i + 2) continue;
      ++j;
      System.out.println(i + ", " + j);
    }

What is the result?
A) 0, 2
   1, 4
B) 0, 2
C) 1, 4
D) The program runs forever
E) Compilation fails

Q) Given:
int x = -1;
sout(x & 5);

What is the result?
A) Compilation fails
B) Exception at runtime
C) -1
D) 0x00000005
E) 5

Q)
  public static boolean getValue() {
    System.out.println("Getting value");
    return true;
  }

and:
    boolean b1 = false;
    System.out.println(b1 & getValue());

What is the result:
A) Compilation fails
B) false
C) true
D) Getting value
   false
E) Getting value
   true

Q) Which print "true"
A) String s = "Hello";
   String t = "He";
   t += "llo";
   sout(s == t);
B) String s = "Hello";
   String t = "He";
   t += "llo";
   sout(s.equals(t));
C) StringBuilder s = new StringBuilder("Hello");
   StringBuilder t = new StringBuilder("He");
   t.append("llo");
   sout(s.equals(t));
D) List<String> ls = List.of("Fred", "Jim");
   List<String> ls2 = new ArrayList<>(ls);
   sout(ls.equals(ls2));
E) LocalDate ld = LocalDate.of(2021, 3, 29);
   LocalDate ld2 = LocalDate.of(2021, 3, 29);
   sout(ld.equals(ld2));

Q)
Given:
String s1 = "Hello";
String s2 = new StringBuilder("Hello").toString();
String s3 = s2.intern();

and, in another jarfile:
   class X {
     static String h = "Hello";
   }

Which are true?
A) s1 == s2
B) s2 == s3
C) s1 == s3
D) X.h == s1
E) None of the above